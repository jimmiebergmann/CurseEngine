language: cpp

dist: trusty

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-8
      - clang-8
      - lcov
      - valgrind
      - mesa-utils
      - xvfb
      - libgl1-mesa-dri
      - libglapi-mesa
      - libosmesa6
      #- libxi-dev
    update: true
    
before_install:
  - pip install --user cpp-coveralls
  
matrix:
  include:
  
    - os: linux
      compiler: gcc
      env:
        - CONFIG=Release
        - CODECOV_UPLOAD=Yes
        
    - os: linux
      compiler: gcc
      env:
        - CONFIG=Debug OUTPUT_NAME_POSTFIX=Debug
        - CODECOV_UPLOAD=Yes
        
    - os: linux
      compiler: clang
      env:
        - CONFIG=Release
        
    - os: linux
      compiler: clang
      env:
        - CONFIG=Debug OUTPUT_NAME_POSTFIX=Debug
        
before_script:
  - export DISPLAY=:99.0; sh -e /etc/init.d/xvfb start
  #- mkdir VulkanSDK_latest
  #- cd VulkanSDK_latest
  #- wget -O VulkanSDK_latest.run https://vulkan.lunarg.com/sdk/download/1.0.51.0/linux/vulkansdk-linux-x86_64-1.0.51.0.run?Human=true
  #- tar xf $HOME/Downloads/vulkansdk-linux-x86_64-1.1.xx.y.tar.gz
  #- cd ..
  
  
script:
  # Checks
  - cmake --version
  - g++ --version
  - gcc --version
  - gcov --version
  - python --version
  # Build
  - mkdir Build
  - cd Build
  - cmake -DCURSE_ENABLE_COVERAGE=ON -DCURSE_ENABLE_VULKAN=OFF -DCMAKE_BUILD_TYPE=${CONFIG} ..
  - cmake --build . --config ${CONFIG}
  # Run test
  - cd ../Bin
  - valgrind --leak-check=full --track-origins=yes --error-exitcode=1 ./CurseCoreTest${OUTPUT_NAME_POSTFIX}
  - cd ../Build
  
after_success:
  - lcov --directory ./Core --capture --output-file coverage.info
  - lcov -e coverage.info '*/Core/Headers/*' '*/Core/Source/*' --output-file coverage.info
  - lcov --list coverage.info
  - if [ ${CODECOV_UPLOAD} ]; then bash <(curl -s https://codecov.io/bash); fi
  - if [ ${CODECOV_UPLOAD} ]; then coveralls --root . -E "/Test/*" -E ".*gtest.*" -E ".*CMakeFiles.*"; fi

notifications:
  email: false
